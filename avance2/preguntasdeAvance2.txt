import org.apache.spark.sql.types._
val myDataSchema = StructType(
    Array(
        StructField("id_persona", DecimalType(26, 0), true), 
        StructField("anio", IntegerType, true), 
        StructField("mes", IntegerType, true), 
        StructField("provincia", IntegerType, true), 
        StructField("canton", IntegerType, true), 
        StructField("area", StringType, true), 
        StructField("genero", StringType, true), 
        StructField("edad", IntegerType, true), 
        StructField("estado_civil", StringType, true), 
        StructField("nivel_de_instruccion", StringType, true), 
        StructField("etnia", StringType, true), 
        StructField("ingreso_laboral", IntegerType, true), 
        StructField("condicion_actividad", StringType, true), 
        StructField("sectorizacion", StringType, true), 
        StructField("grupo_ocupacion", StringType, true), 
        StructField("rama_actividad", StringType, true), 
        StructField("factor_expansion", DoubleType, true)
    ));

-----------------------------------------

val data = spark
  .read
  .schema(myDataSchema)
//  .option("inferSchema", true)
  .option("header", "true")
  .option("delimiter", "\t")
  .csv("/FileStore/tables/Datos_ENEMDU_PEA_v2.csv");

-----------------------------------------------

data.select("edad").distinct().show

-----------------------------------------------

val menorEdad = data.where($"edad" < 18)

--------------------------------------------------

val mayorEdad = data.where($"edad" >= 18)

------------------------------------------------

// 1. Cuantas personas mayores de edad tienen un empleo no remunerado.
mayorEdad.where($"condicion_actividad" === "5 - Empleo no remunerado").count

--------------------------------------------------

// 2. Que porcentaje de persona de la tercera edad cuentan con un Subempleo por insuficiencia de ingresos
val terceraEdad = data.where($"edad" > 65)

--------------------------------------------------

// 3. Cual es el valor promedio de personas menores de edad que tienen un desempleo abierto
val mayorE_desAb = (mayorEdad.where($"condicion_actividad" === "7 - Desempleo abierto").count / mayorEdad.count.toDouble) * 100

---------------------------------------------------

// 4. Cuantas mujeres mayores de edad constan con un empleo adecuado
mayorEdad.where($"genero" === "2 - Mujer" && $"condicion_actividad" === "1 - Empleo Adecuado/Pleno").count

--------------------------------------------------

// 5. Cuantas personas entre los rangos de edad de 55 y 60 aÃ±os tienen un empleo no clasificado
val rangoMayor = (mayorEdad.where($"edad" >= 55 && $"edad" <= 60))

rangoMayor.where($"condicion_actividad" === "6 - Empleo no clasificado").count
